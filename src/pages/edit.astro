---
import { actions } from "astro:actions";
import { getEntry } from "astro:content";
import { readFile } from "fs/promises";

import BaseLayout from "@/layouts/BaseLayout.astro";
import { computeTitle } from "@/lib/guidelines";
import { editableTypesSchema } from "@/lib/guidelines";

if (!import.meta.env.DEV) return new Response(null, { status: 404 });

const result = Astro.getActionResult(actions.edit);
if (result && !result.error) return Astro.redirect("/guidelines/");

const params = Astro.url.searchParams;
const id = params.get("id");
const parsedType = editableTypesSchema.safeParse(params.get("type"));
if (!id || !parsedType.success) return new Response(null, { status: 404 });

const entry = await getEntry(parsedType.data, id);
if (!entry?.filePath) return new Response(null, { status: 404 });
const content = await readFile(entry.filePath, "utf8");
---

<BaseLayout>
  <head>
    <meta charset="utf-8" />
    <title>Editing {computeTitle(entry)}</title>
  </head>
  <body>
    <form method="POST" action={actions.edit}>
      <h1>Editing {computeTitle(entry)}</h1>
      <input type="hidden" name="id" value={id} />
      <input type="hidden" name="type" value={parsedType.data} />
      <textarea name="content">{content}</textarea>
      <button>Save</button>
    </form>
  </body>
</BaseLayout>

<style>
  * {
    box-sizing: border-box;
  }

  html,
  body {
    height: 100%;
    margin: 0;
  }

  form {
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
    padding: 1rem;
  }

  textarea {
    height: 50%;
    width: 100%;
  }
</style>
